import { CourseEntity } from "./../app/modules/courses/models/entity/course.entity";

const CourseDates = {
    date: new Date(),
    old() {
        this.date = new Date();
        this.date.setDate(this.date.getDate() - 30);
        return this.date;
    },
    new() {
        this.date = new Date();
        this.date.setDate(this.date.getDate() - 10);
        return this.date;
    },
    upcoming() {
        this.date = new Date();
        this.date.setDate(this.date.getDate() + 20);
        return this.date;
    },
};

export const mockCoursesData = [
    // tslint:disable:max-line-length
    new CourseEntity("1", "Learning Python", CourseDates.new(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Python—the popular and highly readable object-oriented language—is both powerful and relatively easy to learn. Whether you're new to programming or an experienced developer, this course can help you get started with Python. Joe Marini provides an overview of the installation process, basic Python syntax, and an example of how to construct and run a simple Python program. Learn to work with dates and times, read and write files, and retrieve and parse HTML, JSON, and XML data from the web.", true, "https://cdn.lynda.com/courses/661773-636525828714337558_270x480_thumb.jpg"),
    new CourseEntity("2", "Oracle Java Certification: 1. Data Types", CourseDates.new(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Python—the popular and highly readable object-oriented language—is both powerful and relatively easy to learn. Whether you're new to programming or an experienced developer, this course can help you get started with Python. Joe Marini provides an overview of the installation process, basic Python syntax, and an example of how to construct and run a simple Python program. Learn to work with dates and times, read and write files, and retrieve and parse HTML, JSON, and XML data from the web.", false, "https://cdn.lynda.com/courses/808672-636850510074362093_270x480_thumb.jpg"),
    new CourseEntity("3", "Ruby: Files, Formats, Templates", CourseDates.new(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Python—the popular and highly readable object-oriented language—is both powerful and relatively easy to learn. Whether you're new to programming or an experienced developer, this course can help you get started with Python. Joe Marini provides an overview of the installation process, basic Python syntax, and an example of how to construct and run a simple Python program. Learn to work with dates and times, read and write files, and retrieve and parse HTML, JSON, and XML data from the web.", true, "https://cdn.lynda.com/courses/769290-636852112101488300_270x480_thumb.jpg"),
    new CourseEntity("4", "C Essential Training: 1 The Basics", CourseDates.old(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Python—the popular and highly readable object-oriented language—is both powerful and relatively easy to learn. Whether you're new to programming or an experienced developer, this course can help you get started with Python. Joe Marini provides an overview of the installation process, basic Python syntax, and an example of how to construct and run a simple Python program. Learn to work with dates and times, read and write files, and retrieve and parse HTML, JSON, and XML data from the web.", true, "https://cdn.lynda.com/courses/772324-636795242293390234_270x480_thumb.jpg"),
    new CourseEntity("5", "Serverless Architecture", CourseDates.old(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Serverless architecture moves computing from physical servers to the cloud. This course provides a broad overview of the different types of design patterns available for serverless application development and deployment. Instructor Lynn Langit covers the core concepts behind serverless, including its costs, benefits, and risks. Then she reviews serverless services, including messaging, storage, streaming, payment processing, and deployment, and related solutions: AWS Lambda, Kinesis, Auth0, Kubernetes, and more. She reviews cloud-native architectures for serverless applications that incorporate third-party APIs, notifications, Internet of Things sensors, big data, and machine learning. Plus, learn about emergent architectures that support migration and hybrid serverless functionality. Each chapter is illustrated with real-world use cases that showcase the cost, scalability, and productivity benefits of serverless architecture in action.", false, "https://cdn.lynda.com/courses/774902-636849592189083053_270x480_thumb.jpg"),
    new CourseEntity("6", "Advanced Express", CourseDates.old(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Node.js is one of major platforms for the web and Express is one of the most popular Node frameworks. This course is designed to take your development skills to the next level, with advanced techniques that will enable you to tackle more complex projects with Express. Learn how to integrate a database, build a proper user authentication and authorization system, securely upload files, process and serve images, and deploy your Express apps to production. Daniel also provides instructions for building a login form, improving performance with a cluster module, and securing your application. A complete startup project is included in the exercise files, so you can follow along with the lessons and have a solid foundation for future Express projects.", false, "https://cdn.lynda.com/courses/798496-636849627138347788_270x480_thumb.jpg"),
    new CourseEntity("7", "Android Dependency Injection with Dagger 2 and Kotlin", CourseDates.upcoming(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Dependency injection (DI) is increasingly popular in Android. Injection reduces the amount of code required in an application, reducing debugging overhead. A DI tool like Dagger, which assumes responsibility for creating and providing dependencies of an object, can help make your code cleaner, easier to understand, and easier to test. Dagger 2, the latest version, is particularly highly regarded for its speed and compile-time safety. In this course, Blake Meike teaches Android developers to use Dagger 2 with Kotlin—the newly embraced Android programming language. Review Dagger basics, including the four major types of dependency injection: method, field, lazy, and provider injection. Learn how to use Dagger annotations to declare dependencies, satisfy them, and create reusable modules you can share across your apps. Plus, learn about multibinding and components, the new way of associating modules with injection targets in Dagger 2.", false, "https://cdn.lynda.com/courses/672253-636844535568061830_270x480_thumb.jpg"),
    new CourseEntity("8", "Azure Media Services", CourseDates.upcoming(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Build more complex and demanding media-driven applications using the power of Microsoft Azure and Azure Media Services. This course explains what Azure Media Services has to offer developers of media-rich websites and apps. Instructor Sahil Malik reviews the encoding and streaming solutions, as well as Azure Media Analytics, which offers video indexing, thumbnail generation, face detection, and other AI-based capabilities for generating deep insights into your media and your data.", false, "https://cdn.lynda.com/courses/786408-636840132430637922_270x480_thumb.jpg"),
    new CourseEntity("9", "C++: Advanced Topics", CourseDates.upcoming(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "Want to deepen your understanding of C++? In this course, explore some of the more complex aspects of this core programming language, from smart pointers to move semantics. Instructor Bill Weinman begins by diving deeper into the subject of classes and objects, including class inheritance. Next, Bill goes over smart pointers, which provide the functionality of a pointer with managed memory allocation. He also covers move semantics, including the copy-and-swap idiom; lambda functions; working with a unit test library; and creating a custom string library. As he wraps up the course, Bill shares practical applications of these concepts, helping you grasp how to leverage your new skills in your own C++ projects.", false, "https://cdn.lynda.com/courses/782128-636812482844887371_270x480_thumb.jpg"),
    new CourseEntity("10", "C++ Best Practices for Developers", CourseDates.new(), Math.floor(Math.random() * (180 - 30 + 1)) + 30, "There have been several updates to C++ over the years. In this course, learn best practices that can help you produce higher-quality C++ code by leveraging tools and new features. To begin, instructor Troy Miles provides a high-level overview of the major features introduced in the 2011, 2014, and 2017 updates to the C++ language. Next, he goes over a few tools that can help you improve your code, including how to boost your code's quality and reliability using static analyzers. Troy also shares practical tips for using the new C++ features correctly, as well as rules and techniques for managing objects.", false, "https://cdn.lynda.com/courses/797743-636795281236663959_270x480_thumb.jpg"),
    // tslint:enable:max-line-length
];
